make.exe all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: -dumpmachine: No such file or directory
 
# GNU Make 4.3
# Built for x86_64-pc-msys
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Feb 19 16:06:43 2022

# Variables

# environment
CUDA_PATH_V11_5 = C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.5
# environment
SYSTEMDRIVE = C:
# makefile (from '../../arch.mk', line 7)
ARCH_WIN := 1
# environment
LC_ALL = C
# environment
USERPROFILE = C:\Users\techb
# environment
LOCALAPPDATA = C:\Users\techb\AppData\Local
# environment
VSCODE_IPC_HOOK_EXTHOST = \\.\pipe\vscode-ipc-b44eec14-f488-4525-ab9e-3f785c460291-sock
# environment
VSCODE_CWD = C:\Users\techb\AppData\Local\Programs\Microsoft VS Code
# environment
SYSTEMROOT = C:\WINDOWS
# environment
NVCUDASAMPLES11_5_ROOT = C:\ProgramData\NVIDIA Corporation\CUDA Samples\v11.5
# environment
PROCESSOR_LEVEL = 6
# environment
PSMODULEPATH = C:\Program Files\WindowsPowerShell\Modules;C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules
# default
MAKE_COMMAND := make
# automatic
@D = $(patsubst %/,%,$(dir $@))
# makefile (from '../../dep.mk', line 40)
SHA256SUM := sha256sum
# environment
CHROME_CRASHPAD_PIPE_NAME = \\.\pipe\crashpad_38292_RLHIRMQSPFSTTUUX
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# automatic
%D = $(patsubst %/,%,$(dir $%))
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# environment
VSCODE_CODE_CACHE_PATH = C:\Users\techb\AppData\Roaming\Code\CachedData\f80445acd5a3dadef24aa209168452a3d97cc326
# environment
LANG = C
# default
.LOADED := 
# environment
TMP = /c/Users/techb/AppData/Local/Temp
# default
.INCLUDE_DIRS = /usr/include /usr/include
# makefile
MAKEFLAGS = pqrR
# makefile (from '../../arch.mk', line 1)
MACHINE = $(shell $(CC) -dumpmachine)
# environment
INTEL_DEV_REDIST = C:\Program Files (x86)\Common Files\Intel\Shared Libraries\
# environment
ONEDRIVE = C:\Users\techb\OneDrive
# environment
POWERSHELL_DISTRIBUTION_CHANNEL = MSI:Windows 10 Home
# makefile
CURDIR := /c/Dropbox/EMCstudio/Development/Cplusplus/Rack/plugins/Techtools-01
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from '../../dep.mk', line 25)
UNZIP := unzip -o
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from '../../plugin.mk', line 6)
VERSION := 2.0.0
# makefile (from '../../dep.mk', line 41)
SED := sed -i
# environment
PROGRAMFILES = C:\Program Files
# makefile (from '../../compile.mk', line 10)
OTOOL = otool
# environment
MFLAGS = -pqrR
# default
.SHELLFLAGS := -c
# environment
!C: = c:\Dropbox\EMCstudio\Development\Cplusplus\Rack\plugins\Techtools-01
# environment
COMMONPROGRAMW6432 = C:\Program Files\Common Files
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from '../../arch.mk', line 1)
MAKEFILE_LIST := Makefile ../../plugin.mk ../../arch.mk ../../dep.mk ../../arch.mk ../../compile.mk ../../arch.mk
# automatic
@F = $(notdir $@)
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
VSCODE_PID = 38292
# makefile (from '../../plugin.mk', line 5)
SLUG := EMC23-TechTools-01
# environment
CUDA_PATH = C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.5
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from '../../dep.mk', line 19)
DEP_CFLAGS = $(DEP_FLAGS)
# makefile (from '../../compile.mk', line 45)
FLAGS = -fPIC -I$(RACK_DIR)/include -I$(RACK_DIR)/dep/include -MMD -MP -g -O3 -march=nehalem -funsafe-math-optimizations -fno-omit-frame-pointer -Wall -Wextra -Wno-unused-parameter -DARCH_WIN -D_USE_MATH_DEFINES -municode $(EXTRA_FLAGS)
# automatic
*F = $(notdir $*)
# makefile (from '../../dep.mk', line 34)
CMAKE := cmake -G 'MSYS Makefiles' -DCMAKE_INSTALL_PREFIX="/c/Dropbox/EMCstudio/Development/Cplusplus/Rack/plugins/Techtools-01/dep" -DCMAKE_INSTALL_LIBDIR=lib
# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# environment
ONEDRIVECONSUMER = C:\Users\techb\OneDrive
# default
MAKE_HOST := x86_64-pc-msys
# environment
PROGRAMDATA = C:\ProgramData
# default
SHELL := /bin/sh
# environment
HOMEPATH = \Users\techb
# default
MAKECMDGOALS := all
# environment
DRIVERDATA = C:\Windows\System32\Drivers\DriverData
# environment
COMSPEC = C:\WINDOWS\system32\cmd.exe
# environment
WINDIR = C:\WINDOWS
# makefile (from '../../dep.mk', line 26)
CONFIGURE := ./configure --prefix="/c/Dropbox/EMCstudio/Development/Cplusplus/Rack/plugins/Techtools-01/dep" --host=
# makefile (from '../../plugin.mk', line 46)
RACK_USER_DIR = $(USERPROFILE)/Documents/Rack2
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# environment
PATH = /c/ProgramData/Miniconda3/condabin:/c/Program Files (x86)/Razer Chroma SDK/bin:/c/Program Files/Razer Chroma SDK/bin:/c/Program Files (x86)/Common Files/Intel/Shared Libraries/redist/intel64/compiler:/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.5/bin:/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.5/libnvvp:/c/Program Files (x86)/Razer/ChromaBroadcast/bin:/c/Program Files/Razer/ChromaBroadcast/bin:/usr/bin:/mingw64/bin:/c/Program Files/SSHFS-Win/bin:/c/WINDOWS/system32:/c/WINDOWS:/c/WINDOWS/System32/Wbem:/c/WINDOWS/System32/WindowsPowerShell/v1.0:/c/WINDOWS/System32/OpenSSH_:/c/Windows/System32/OpenSSH:/c/WINDOWS/System32/OpenSSH:/c/Program Files (x86)/dotnet:/c/Program Files/Git/cmd:/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/c/WINDOWS/system32/config/systemprofile/AppData/Local/Microsoft/WindowsApps:/c/Program Files/NVIDIA Corporation/Nsight Compute 2021.3.0:/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/c/Program Files/cuda/bin:/c/Program Files/Docker/Docker/resources/bin:/c/ProgramData/DockerDesktop/version-bin:$env:POSH_PATH:/c/Program Files/PowerShell/7:/c/Users/techb/Documents/Scripts:/c/Users/techb/AppData/Local/Microsoft/WindowsApps:/c/Users/techb/.dotnet/tools:/c/Users/techb/AppData/Local/Programs/Microsoft VS Code/bin:/c/Users/techb/AppData/Local/GitHubDesktop/bin:/c/Users/techb/AppData/Local/Programs/oh-my-posh/bin:/c/Users/techb/AppData/Local/Programs/oh-my-posh/themes
# environment
ZES_ENABLE_SYSMAN = 1
# environment
COMPUTERNAME = MILDRED
# default
MAKEFILES := 
# makefile (from '../../dep.mk', line 6)
DEP_PATH := /c/Dropbox/EMCstudio/Development/Cplusplus/Rack/plugins/Techtools-01/dep
# automatic
^F = $(notdir $^)
# makefile (from '../../compile.mk', line 57)
DEPENDENCIES :=  build/src/plugin.cpp.d  build/src/modules/Sinth.cpp.d
# environment
PROMPT = $P$G
# makefile (from '../../plugin.mk', line 61)
ZSTD_COMPRESSION_LEVEL = 19
# environment
NVTOOLSEXT_PATH = C:\Program Files\NVIDIA Corporation\NvToolsExt\
# environment
LOGONSERVER = \\MILDRED
# environment
VSCODE_LOG_NATIVE = false
# environment
USERNAME = techb
# environment
COMMONPROGRAMFILES = C:\Program Files\Common Files
# automatic
?F = $(notdir $?)
# environment
PROGRAMW6432 = C:\Program Files
# makefile (from '../../dep.mk', line 11)
DEP_FLAGS = -fPIC -g -O3 -march=nehalem -fPIC
# environment
PATHEXT = .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC
# automatic
+F = $(notdir $+)
# makefile (from '../../dep.mk', line 43)
SHA256 := sha256check() { echo "$$2  $$1" | sha256sum -c; }; sha256check
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# makefile (from '../../compile.mk', line 55)
OBJECTS :=  build/src/plugin.cpp.o  build/src/modules/Sinth.cpp.o 
# environment
USERDOMAIN = MILDRED
# 'override' directive
GNUMAKEFLAGS := 
# environment
OS = Windows_NT
# makefile (from 'Makefile', line 2)
RACK_DIR = ../..
# makefile (from '../../plugin.mk', line 89)
.DEFAULT_GOAL := all
# makefile (from '../../compile.mk', line 9)
INSTALL_NAME_TOOL = install_name_tool
# default
MAKE_VERSION := 4.3
# makefile (from '../../arch.mk', line 4)
ARCH_x64 := 1
# makefile (from '../../dep.mk', line 23)
WGET := wget -c
# 'override' directive
.SHELLSTATUS := 127
# environment
PROGRAMFILES(X86) = C:\Program Files (x86)
# makefile (from '../../dep.mk', line 24)
UNTAR := tar xf
# makefile (from '../../compile.mk', line 48)
LDFLAGS = -shared -L$(RACK_DIR) -lRack -static-libstdc++ $(EXTRA_LDFLAGS)
# environment
NVCUDASAMPLES_ROOT = C:\ProgramData\NVIDIA Corporation\CUDA Samples\v11.5
# makefile (from '../../arch.mk', line 5)
ARCH_NAME := x64
# environment
USERDOMAIN_ROAMINGPROFILE = MILDRED
# environment
NUMBER_OF_PROCESSORS = 12
# environment
PUBLIC = C:\Users\Public
# makefile (from '../../dep.mk', line 20)
DEP_CXXFLAGS = $(DEP_FLAGS)
# environment
APPDATA = C:\Users\techb\AppData\Roaming
# makefile (from '../../compile.mk', line 51)
CFLAGS = $(EXTRA_CFLAGS) $(FLAGS)
# environment
HOMEDRIVE = C:
# environment
PROCESSOR_ARCHITECTURE = AMD64
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# environment
HOME = /home/techb
# environment
COMMONPROGRAMFILES(X86) = C:\Program Files (x86)\Common Files
# environment
CMAKE_MAKE_PROGRAM = C:\msys64\usr\bin\make.exe
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
TEMP = /c/Users/techb/AppData/Local/Temp
# environment
VSCODE_IPC_HOOK = \\.\pipe\ccf3e687783ebea4c0e62eff7022d9f9-1.64.2-main-sock
# environment
TERM = xterm-256color
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# default
SUFFIXES := 
# environment
ALLUSERSPROFILE = C:\ProgramData
# makefile (from '../../plugin.mk', line 44)
TARGET := plugin.dll
# environment
SESSIONNAME = Console
# makefile (from '../../dep.mk', line 4)
DEP_LOCAL = dep
# makefile (from '../../compile.mk', line 52)
CXXFLAGS = -std=c++11 -Wsuggest-override $(EXTRA_CXXFLAGS) $(FLAGS)
# makefile (from '../../compile.mk', line 8)
STRIP = strip
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink load
# environment
MIC_LD_LIBRARY_PATH = C:\Program Files (x86)\Common Files\Intel\Shared Libraries\compiler\lib\mic
# environment
PROCESSOR_REVISION = 9e0a
# makefile (from '../../arch.mk', line 8)
ARCH_OS_NAME := win
# makefile (from '../../compile.mk', line 7)
OBJCOPY = objcopy
# makefile (from 'Makefile', line 12)
SOURCES = $(wildcard src/*.cpp) $(wildcard src/modules/*.cpp) $(wildcard src/lib/*.cpp) $(wildcard src/components/*.cpp) $(wildcard src/dev/*.cpp)
# makefile (from '../../plugin.mk', line 15)
DISTRIBUTABLES = $(wildcard LICENSE*) res presets plugin.json
# environment
PROCESSOR_IDENTIFIER = Intel64 Family 6 Model 158 Stepping 10, GenuineIntel
# variable set hash-table stats:
# Load=142/1024=14%, Rehash=0, Collisions=21/328=6%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# src/modules (device 4138653960, inode 4222124650769790): 5 files, no impossibilities.
# src (device 4138653960, inode 16888498602749074): 5 files, no impossibilities.
# . (device 4138653960, inode 3096224743947913): 16 files, no impossibilities.
# src/dev: could not be stat'd.
# src/components: could not be stat'd.
# src/lib: could not be stat'd.

# 26 files, no impossibilities in 6 directories.

# Implicit Rules

build/%.c.o: %.c
#  recipe to execute (from '../../compile.mk', line 67):
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) -c -o $@ $<

build/%.cpp.o: %.cpp
#  recipe to execute (from '../../compile.mk', line 71):
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) -c -o $@ $<

build/%.cc.o: %.cc
#  recipe to execute (from '../../compile.mk', line 75):
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) -c -o $@ $<

build/%.m.o: %.m
#  recipe to execute (from '../../compile.mk', line 79):
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) -c -o $@ $<

build/%.bin.o: %
#  recipe to execute (from '../../compile.mk', line 83):
	@mkdir -p $(@D)
	$(OBJCOPY) -I binary -O pe-x86-64 -B i386:x86-64 --rename-section .data=.rodata,alloc,load,readonly,data,contents $< $@

build/%.html: %.md
#  recipe to execute (from '../../compile.mk', line 96):
	markdown $< > $@

# 6 implicit rules, 0 (0.0%) terminal.
# Files

dist: all
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../../plugin.mk', line 64):
	rm -rf dist
	mkdir -p dist/$(SLUG)
	@# Strip and copy plugin binary
	cp $(TARGET) dist/$(SLUG)/
	$(STRIP) -s dist/$(SLUG)/$(TARGET)
	@# Copy distributables
	cp -r --parents $(DISTRIBUTABLES) dist/$(SLUG)/
	@# Create ZIP package
	cd dist && tar -c $(SLUG) | zstd -$(ZSTD_COMPRESSION_LEVEL) -o "$(SLUG)"-"$(VERSION)"-$(ARCH_OS_NAME).vcvplugin

build/src/plugin.cpp.o: src/plugin.cpp
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'src/plugin'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := build/src/plugin.cpp.o
# automatic
# * := src/plugin
# automatic
# < := src/plugin.cpp
# automatic
# + := src/plugin.cpp
# automatic
# % := 
# automatic
# ^ := src/plugin.cpp
# automatic
# ? := src/plugin.cpp
# automatic
# | := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=4/22=18%
#  recipe to execute (from '../../compile.mk', line 71):
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) -c -o $@ $<

cleandep:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../../dep.mk', line 57):
	rm -rfv $(DEP_LOCAL)

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-02-19 15:33:32.2027888
#  File has been updated.
#  Successfully updated.

# Not a target:
../../dep.mk:
#  Implicit rule search has been done.
#  Last modified 2022-02-18 17:20:02.1698665
#  File has been updated.
#  Successfully updated.

dep:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from '../../plugin.mk', line 59):
	rm -rfv build $(TARGET) dist

# Not a target:
../../compile.mk:
#  Implicit rule search has been done.
#  Last modified 2022-02-18 17:20:02.167826
#  File has been updated.
#  Successfully updated.

# Not a target:
src/plugin.cpp:
#  Implicit rule search has been done.
#  Last modified 2021-11-04 21:32:53
#  File has been updated.
#  Successfully updated.

# Not a target:
build/src/modules/Sinth.cpp.d:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

# Not a target:
build/src/modules/Sinth.cpp.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
build/src/plugin.cpp.d:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all: plugin.dll
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/11=0%

plugin.dll: build/src/plugin.cpp.o build/src/modules/Sinth.cpp.o
#  Implicit rule search has not been done.
#  Last modified 2021-12-11 17:47:05
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/11=0%
#  recipe to execute (from '../../compile.mk', line 62):
	$(CXX) -o $@ $^ $(LDFLAGS)

install: dist
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from '../../plugin.mk', line 85):
	mkdir -p "$(RACK_USER_DIR)"/plugins/
	cp dist/*.vcvplugin "$(RACK_USER_DIR)"/plugins/

# Not a target:
../../arch.mk:
#  Implicit rule search has been done.
#  Last modified 2022-02-19 12:22:00.7900664
#  File has been updated.
#  Successfully updated.

.PHONY: dep clean dist
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
../../plugin.mk:
#  Implicit rule search has been done.
#  Last modified 2022-02-18 17:20:02.4868475
#  File has been updated.
#  Successfully updated.

# files hash-table stats:
# Load=20/1024=2%, Rehash=0, Collisions=0/52=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 57 / storage = 605 B / avg = 10 B
# current buf: size = 8162 B / used = 605 B / count = 57 / avg = 10 B

# strcache performance: lookups = 96 / hit rate = 40%
# hash-table stats:
# Load=57/8192=1%, Rehash=0, Collisions=4/96=4%
# Finished Make data base on Sat Feb 19 16:06:43 2022

 
